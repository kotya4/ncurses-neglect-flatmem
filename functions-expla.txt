
парсер стекового типа то есть в интепрактивном режиме вводишь команды по одному


1. интерактивный стековый парсер команд
описание:
. при запуске программа приглашает пользователя к вводу команд
. программа завершает свое выполнение при вводе команды "exit"
. ввод команды считается завершенным при вводе любого несимвольного знака
.. команда должна удовлетворять регулярному выражению [^\s]+
. в зависимости от состояния программы введенная команда может быть ОЖИДАЕМАЯ(1) или НЕОЖИДАННАЯ(2)
.. если команда ожидаемая(1), программа попытается исполнить весь набор ОЖИДАЮЩИХ(3) команд
... введенная команда исполняется если:
.... набор ожидающих(3) команд возможно исполнить
.... введенная команда ИСПОЛНИМАЯ(4)
... если команда неисполнима но ожидаема(1) тогда она добавляется к набору ожидающих(3) команд
.. если команда неожиданная(2), программа оповещает об этом пользователя и позволяет продолжить ввод команд
.. после исполнения набора ожидающих(3) команд пользователь видит результат, набор ожидающих(3) команд очищается
. любая константа является ожидаемой(1)
достаточные условия:
. ввод/вывод в стандарте ASCII (dos-866) или UTF-8
. открытость документации языка используемого для реализации программы
. возможность объявлять функции
.. для объявления функции используется ключевое слово "function"
.. возможность использовать имя объявленной функции в качестве команды
.. функция может иметь от 0 до неограниченного количества аргументов
.. все функции возвращают значение
... все значения являются константами
. возможность вызвать объявленную функцию
.. перед вызовом функция должна быть объявлена
.. аргументы функции описываются перед вызовом функции (польская нотация)

1.1 интерактивный ТИПИЗИРОВАННЫЙ стековый парсер комманд
. в объявлении функции можно вызывать еще не объявленные функции
.. при вызове функции содержащей необъявленную функцию пользователь оповещается
. реализация команды "check [имя функции]" для проверки функции на содержание необъявленных функций
.. выводит на экран список необъявленных функций и их сигнатуры
. возможность вывода имен всех объявленных функций при помощи команды "get"
. возможность вывода листинга объявленной функции при помощи команды "list [имя функции]"
. возможность объявлять функции с перегруженными аргументами
. возможность перегружать сами функции
. возможность вывода сигнатуры объявленной функции при помощи команды "sig [имя функции]"
. возможность вывода имен функций соответствующей сигнатуры при помощи команды "getsig [сигнатура]"
